Continuous integration tools can be the Achilles heel for a ...
http://www.cio.com.au/article/588886/continuous-integration-tools-can-achilles-heel-company-it-security/

some of the most popular automated software building and testing tools used by developers have not been designed with security in mind and can open the door for attackers to compromise enterprise networks .  these so-called continuous integration ( ci ) tools allow developers to automatically create software builds when code changes are contributed by developers to a central repository . the creation of these builds , which are used for quality control , is coordinated by a ci master server based on predefined rules and done on ci slave machines .  if hackers manage to access a ci master server , they can steal proprietary source code , but also gain the ability to execute commands on all the machines that operate as ci slaves , security researcher and penetration tester nikhil mittal said friday in a presentation at the black hat europe security conference in amsterdam . " this access could be used for lateral movement to get access to more machines . "  in fact , mittal said that he has never seen a penetration test so far where unauthorized access to the whole network domain .  that 's because most ci tools are insecure in their default configuration and certain user roles allow the execution of powershell commands and scripts with system privileges . chances are high that the token for a domain administrator can be found in a process running on one of the ci slave machines .  mittal tested three open-source ci tools called jenkins , cruisecontrol and go and two proprietary ones called teamcity and hudson . he found default insecure configurations and exploitable features in all of them .  he demonstrated several attacks that could result in command execution on underlying machines , the opening of reverse shells and the theft of sensitive data like database and git credentials , ssh keys and more .  the researcher found many instances of ci server deployments that are directly accessible from the internet and do not even require authentication .  out of the top ten software development companies in the world , at least 5 had such services exposed , he said .  as common problems across all tested ci tools , mittal controls like brute-force protection , the ability to run commands and scripts on the os by non-administrative users , the ability to remove all security measures if a build agent is running on the master server , insecure storage of credentials and ssh keys and unauthenticated remote access .  in order to protect these systems , the researcher recommended that no build executor should ever run on the master ci server , restricting the user privileges who can configure build steps , securing the admin dashboard , not exposing the ci tool to the internet unless absolutely necessary , not providing read privileges to anonymous users and preventing users from using their usernames as passwords .  copyright 2015 idg communications . abn 14 001 592 650 . all rights reserved . reproduction in whole or in part in any form or medium without express written permission of idg communications is prohibited .